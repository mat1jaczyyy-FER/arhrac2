//   0x00 - 0x7F = program
//   0x80 - .... = data
//   .... - 0xFF = stack
% // START

//   LDSP 0
0: 001011   00
1:        0

// LOAD_IMMEDIATE r0, 3
2:         000001 00
3:                    3

// LOAD_IMMEDIATE r1, 2
4:         000001 01
5:                    2

//    ADD r0, r0, r1
6: 000010 00
7:            00  01 0000

//   MOVE r1, r0
8: 000100 01
9:            00 000000

// LOAD_IMMEDIATE r0, 128
10:        000001 00
11:                    128

//   STORE r1, (r0)
12: 000110          00
13:        01   00  0000

//     SUB r1, r1, r1
14: 001001 01
15:            01  01 0000

//    LOAD r0, 128
16: 000101 00
17:            128

//     JMP 22
18: 000111    00
19:        22

//     JMP 28
20: 000111    00
21:        28

// LOAD_IMMEDIATE r2, 20
22:        000001 10
23:                   20

//      JZ r0, r2
24: 001000        00
25:        00  10 0000

//      JZ r1, r2
26: 001000        00
27:        01  10 0000

//     SHL r0, r0
28: 001010 00
29:            00 000000

//    PUSH r0
30: 001100    00
31:        00 000000

// LOAD_IMMEDIATE r1, 7
32:        000001 01
33:                   7

//    CALL 40
34: 001110    00
35:        40

//     POP r2
36: 001101 10
37:           0

//    HALT
38: 000011 00
39:        0

//     SUB r0, r0, r1
40: 001001 00
41:            00  01 0000

//     RET
42: 001111 00
43:        0
